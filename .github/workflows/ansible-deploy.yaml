name: Ansible CI/CD Deploy

on:
  workflow_dispatch:

jobs:
  ansible-deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    env:
      ANSIBLE_HOST_KEY_CHECKING: "False"

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install Ansible & Lint
        run: |
          python -m pip install --upgrade pip
          pip install ansible ansible-lint

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY_PROD }}

      - name: Get GKE credentials
        uses: google-github-actions/get-gke-credentials@v2
        with:
          cluster_name: ${{ secrets.GKE_CLUSTER_NAME }}
          location: ${{ secrets.GKE_CLUSTER_LOCATION }}

      - name: Create inventory directory
        run: mkdir -p ansible/inventory

      - name: Create Ansible inventory file
        run: |
          echo "[prod]" > ansible/inventory/hosts.ini
          echo "localhost ansible_connection=local" >> ansible/inventory/hosts.ini
          chmod 600 ansible/inventory/hosts.ini

      - name: Print working directory and verify files
        run: |
          pwd
          echo "=== Inventory Structure ==="
          find ansible -type f -name "*.ini" -o -name "*.yaml" -o -name "*.yml"
          echo "=== Inventory Content ==="
          cat ansible/inventory/hosts.ini
          echo "=== Group Vars ==="
          if [ -d ansible/inventory/group_vars/prod ]; then
            ls -la ansible/inventory/group_vars/prod/
          else
            echo "No group_vars/prod directory found"
          fi

      - name: Test Ansible connection
        run: |
          echo "${{ secrets.ANSIBLE_VAULT_PASSWORD }}" > vault_pass.txt
          ansible all -i ansible/inventory/hosts.ini -m ping --limit prod --vault-password-file vault_pass.txt
          rm -f vault_pass.txt

      - name: Deploy App
        uses: dawidd6/action-ansible-playbook@v2
        with:
          playbook: ansible/playbooks/app_deployment.yaml
          directory: ./
          inventory: ansible/inventory/hosts.ini
          vault_password: ${{ secrets.ANSIBLE_VAULT_PASSWORD }}
          # options: --limit prod

      - name: Cleanup
        if: always()
        run: |
          rm -f vault_pass.txt
          rm -f ansible/inventory/hosts.ini
