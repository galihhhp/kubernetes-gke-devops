name: Ansible CI/CD Deploy

on:
  workflow_dispatch:

jobs:
  ansible-deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    env:
      ANSIBLE_HOST_KEY_CHECKING: "False"

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ansible ansible-lint kubernetes

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY_PROD }}

      - name: Get GKE credentials
        uses: google-github-actions/get-gke-credentials@v2
        with:
          cluster_name: ${{ secrets.GKE_CLUSTER_NAME }}
          location: ${{ secrets.GKE_CLUSTER_LOCATION }}

      - name: Create proper inventory structure
        run: |
          mkdir -p inventory/group_vars/prod

          echo "[prod]" > inventory/hosts
          echo "localhost ansible_connection=local" >> inventory/hosts

          cp -r ansible/inventory/group_vars/* inventory/group_vars/

      - name: Test Ansible connection
        run: |
          ansible all -i ansible/inventory/hosts -m ping --limit prod

      - name: Deploy App (Alternative - Direct Command)
        run: |
          echo "${{ secrets.ANSIBLE_VAULT_PASSWORD }}" > vault_pass.txt
          chmod 600 vault_pass.txt
          ansible-playbook ansible/playbooks/app_deployment.yaml \
            -i ./inventory/hosts \
            --limit prod \
            --vault-password-file vault_pass.txt \
            -vv

      - name: Cleanup
        if: always()
        run: |
          rm -f vault_pass.txt
          rm -rf inventory/
